<sape:TextualExpressionEditor x:Uid="controlRoot" x:Class="System.Activities.Presentation.View.VisualBasicEditor"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:swd="clr-namespace:System.Activities.Presentation"
    xmlns:swdv="clr-namespace:System.Activities.Presentation.View"
    xmlns:sape="clr-namespace:System.Activities.Presentation.Expressions"
    xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"    
    AutomationProperties.AutomationId="VisualBasicEditor"
    Focusable="False"
    Style="{DynamicResource visualBasicEditorStyle}"
    BorderBrush="{DynamicResource WorkflowViewElementBorderBrush}" BorderThickness="1">

    <sape:TextualExpressionEditor.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_1">
            <ResourceDictionary.MergedDictionaries>
                <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_2" Source="/System.Activities.Presentation;component/System/Activities/Presentation/ColorResources.xaml"/>
                <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_3" Source="/System.Activities.Presentation;component/Themes/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <swdv:ValidationStateToErrorConverter x:Uid="swdv:ValidationStateToErrorConverter_1" x:Key="errorConverter" />
            <swdv:ValidationErrorMessageConverter x:Uid="swdv:ValidationErrorMessageConverter_1" x:Key="errorMessageConverter"/>
            <swdv:LineToHeightConverter x:Uid="swdv:LineToHeightConverter_1" x:Key="lineToHeightConverter" />
            <swdv:TypeToPromptTextConverter x:Uid="swdv:TypeToPromptTextConverter" x:Key="typeToPromptTextConverter" />

            <Style x:Uid="Style_10" x:Key="visualBasicEditorStyle" TargetType="{x:Type swdv:VisualBasicEditor}">
              <Setter x:Uid="Setter_203" Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
              <Style.Triggers>
                <DataTrigger x:Uid="DataTrigger_100" Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                  <Setter x:Uid="Setter_200" Property="ToolTip" Value="{Binding Path=HintText, RelativeSource={RelativeSource Self}}"/>
                </DataTrigger>
                <DataTrigger x:Uid="DataTrigger_101" Binding="{Binding Path=Text.Length, RelativeSource={RelativeSource Self}}" Value="0">
                  <Setter x:Uid="Setter_201" Property="ToolTip" Value="{Binding Path=HintText, RelativeSource={RelativeSource Self}}"/>
                </DataTrigger>
                <DataTrigger x:Uid="DataTrigger_102" Binding="{Binding Path=EditingState, RelativeSource={RelativeSource Self}}" Value="Editing">
                  <Setter x:Uid="Setter_202" Property="ToolTip" Value="{x:Null}"/>
                </DataTrigger>

              </Style.Triggers>
            </Style>
            <Style x:Uid="Style_2" x:Key="boxStyle" TargetType="{x:Type TextBox}">
                <Setter x:Uid="Setter_10" Property="AutomationProperties.AutomationId" Value="{Binding Path=Name}" />
                <Setter x:Uid="Setter_75" Property="AutomationProperties.Name" Value="{Binding Path=(AutomationProperties.Name)}" />
                <Setter x:Uid="Setter_76" Property="AutomationProperties.HelpText" Value="{Binding Path=(AutomationProperties.HelpText)}" />
                <Setter x:Uid="Setter_11" Property="MinLines" Value="{Binding Path=MinLines}" />
                <Setter x:Uid="Setter_12" Property="MaxLines" Value="{Binding Path=MaxLines}" />
                <Setter x:Uid="Setter_13" Property="MinHeight" Value="{Binding Path=MinHeight}" />
                <Setter x:Uid="Setter_14" Property="MaxHeight" Value="{Binding Path=MaxHeight}" />
                <Setter x:Uid="Setter_15" Property="VerticalScrollBarVisibility" Value="{Binding Path=VerticalScrollBarVisibility}" />
                <Setter x:Uid="Setter_16" Property="HorizontalScrollBarVisibility" Value="{Binding Path=HorizontalScrollBarVisibility}" />
                <Setter x:Uid="Setter_17" Property="ContextMenu" Value="{Binding Path=ContextMenu}" />
                <Setter x:Uid="Setter_18" Property="FlowDirection" Value="LeftToRight" />
                <Setter x:Uid="Setter_19" Property="FontFamily" Value="{Binding Path=FontFamily}" />
                <Setter x:Uid="Setter_20" Property="FontSize" Value="{Binding Path=FontSize}" />
                <Setter x:Uid="Setter_21" Property="FontStretch" Value="{Binding Path=FontStretch}" />
                <Setter x:Uid="Setter_22" Property="FontStyle" Value="{Binding Path=FontStyle}" />
                <Setter x:Uid="Setter_23" Property="FontWeight" Value="{Binding Path=FontWeight}" />
                <Setter x:Uid="Setter_24" Property="Height" Value="{Binding Path=Height}" />
                <Setter x:Uid="Setter_110" Property="Width" Value="{Binding Path=Width}" />
                <Setter x:Uid="Setter_25" Property="Language" Value="{Binding Path=Language}" />
                <Setter x:Uid="Setter_26" Property="SnapsToDevicePixels" Value="{Binding Path=SnapsToDevicePixels}" />
                <Setter x:Uid="Setter_100" Property="AcceptsReturn" Value="{Binding Path=AcceptsReturn}" />
                <Setter x:Uid="Setter_101" Property="AcceptsTab" Value="{Binding Path=AcceptsTab}" />
                <Style.Triggers>
                    <DataTrigger x:Uid="DataTrigger_4" Binding="{Binding Path=Expression.IsCurrentContext}" Value="True">
                        <Setter x:Uid="Setter_28" Property="Background" Value="{DynamicResource WorkflowViewElementCurrentContextBackground}" />
                    </DataTrigger>
                    <DataTrigger x:Uid="DataTrigger_5" Binding="{Binding Path=Expression.IsCurrentLocation}" Value="True">
                        <Setter x:Uid="Setter_29" Property="Background" Value="{DynamicResource WorkflowViewElementCurrentLocationBackground}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Uid="Style_3" x:Key="blockStyle" TargetType="{x:Type TextBlock}">
                <Setter x:Uid="Setter_30" Property="Text" Value="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter x:Uid="Setter_77" Property="Margin" Value="4,2,4,2"/>
                <Setter x:Uid="Setter_31" Property="AutomationProperties.AutomationId" Value="{Binding Path=Name}" />
                <Setter x:Uid="Setter_32" Property="MinHeight">
                    <Setter.Value>
                        <MultiBinding x:Uid="MultiBinding_1" Converter="{StaticResource lineToHeightConverter}"
                          ConverterParameter="MinHeight">
                            <Binding x:Uid="Binding_1" Path="MinHeight" RelativeSource="{RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}" />
                            <Binding x:Uid="Binding_2" Path="FontFamily" RelativeSource="{RelativeSource Self}" />
                            <Binding x:Uid="Binding_3" Path="FontSize" RelativeSource="{RelativeSource Self}" />
                            <Binding x:Uid="Binding_4" Path="MinLines" RelativeSource="{RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter x:Uid="Setter_33" Property="MaxHeight">
                    <Setter.Value>
                        <MultiBinding x:Uid="MultiBinding_2" Converter="{StaticResource lineToHeightConverter}"
                          ConverterParameter="MaxHeight">
                            <Binding x:Uid="Binding_5" Path="MaxHeight" RelativeSource="{RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}" />
                            <Binding x:Uid="Binding_6" Path="FontFamily" RelativeSource="{RelativeSource Self}" />
                            <Binding x:Uid="Binding_7" Path="FontSize" RelativeSource="{RelativeSource Self}" />
                            <Binding x:Uid="Binding_8" Path="MaxLines" RelativeSource="{RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter x:Uid="Setter_34" Property="ContextMenu" Value="{Binding Path=ContextMenu}" />
                <Setter x:Uid="Setter_35" Property="FlowDirection" Value="LeftToRight" />
                <Setter x:Uid="Setter_36" Property="FontFamily" Value="{Binding Path=FontFamily}" />
                <Setter x:Uid="Setter_37" Property="FontSize" Value="{Binding Path=FontSize}" />
                <Setter x:Uid="Setter_38" Property="FontStretch" Value="{Binding Path=FontStretch}" />
                <Setter x:Uid="Setter_39" Property="FontStyle" Value="{Binding Path=FontStyle}" />
                <Setter x:Uid="Setter_40" Property="FontWeight" Value="{Binding Path=FontWeight}" />
                <Setter x:Uid="Setter_41" Property="Height" Value="{Binding Path=Height}" />
                <Setter x:Uid="Setter_42" Property="Language" Value="{Binding Path=Language}" />
                <Setter x:Uid="Setter_43" Property="SnapsToDevicePixels" Value="{Binding Path=SnapsToDevicePixels}" />
                <Setter x:Uid="Setter_74" Property="Foreground" Value="{DynamicResource WorkflowViewElementCaptionBrush}" />
                <Setter x:Uid="Setter_91" Property="VerticalAlignment" Value="{Binding Path=VerticalAlignment}"/>
                <Style.Triggers>

                    <DataTrigger x:Uid="DataTrigger_11" Binding="{Binding Path=IsEnabled}" Value="False">
                        <Setter x:Uid="Setter_104" Property="Background" Value="{DynamicResource WorkflowViewElementBackground}" />
                        <Setter x:Uid="Setter_105" Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}" />
                    </DataTrigger>
                    <DataTrigger x:Uid="DataTrigger_7" Binding="{Binding Path=Expression.IsCurrentContext}" Value="True">
                        <Setter x:Uid="Setter_45" Property="Background" Value="{DynamicResource WorkflowViewElementCurrentContextBackground}" />
                    </DataTrigger>
                    <DataTrigger x:Uid="DataTrigger_8" Binding="{Binding Path=Expression.IsCurrentLocation}" Value="True">
                        <Setter x:Uid="Setter_46" Property="Background" Value="{DynamicResource WorkflowViewElementCurrentLocationBackground}" />
                    </DataTrigger>

                    <!-- show hint text when VisualBasicEditor text is null-->
                    <DataTrigger  x:Uid="DataTrigger_10" Binding="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Value="{x:Null}">
                        <Setter x:Uid="Setter_79" Property="FontStyle" Value="Italic"/>
                        <Setter x:Uid="Setter_80" Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Setter x:Uid="Setter_81" Property="Text" Value="{Binding Path=HintText, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"/>
                    </DataTrigger>
                    <MultiDataTrigger x:Uid="MultiDataTrigger_1">
                      <MultiDataTrigger.Conditions>
                        <Condition x:Uid="Condition_1" Binding="{Binding Source={x:Static swd:LocalAppContextSwitches.UseLegacyAccessibilityFeatures}}" Value="False" />
                        <Condition x:Uid="Condition_2" Binding="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Value="{x:Null}" />
                        <Condition x:Uid="Condition_3" Binding="{Binding Path=IsSelected, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True" />
                        <Condition x:Uid="Condition_4" Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter x:Uid="Setter_107" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    </MultiDataTrigger>
                    <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding Path=Text.Length, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Value="0">
                        <Setter x:Uid="Setter_83" Property="FontStyle" Value="Italic"/>
                        <Setter x:Uid="Setter_84" Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Setter x:Uid="Setter_85" Property="Text" Value="{Binding Path=HintText, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"/>
                    </DataTrigger>
                    <MultiDataTrigger x:Uid="MultiDataTrigger_2">
                      <MultiDataTrigger.Conditions>
                        <Condition x:Uid="Condition_5" Binding="{Binding Source={x:Static swd:LocalAppContextSwitches.UseLegacyAccessibilityFeatures}}" Value="False" />
                        <Condition x:Uid="Condition_6" Binding="{Binding Path=Text.Length, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Value="0" />
                        <Condition x:Uid="Condition_7" Binding="{Binding Path=IsSelected, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True" />
                        <Condition x:Uid="Condition_8" Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter x:Uid="Setter_108" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    </MultiDataTrigger>
                  
                    <DataTrigger x:Uid="DataTrigger_3" Binding="{Binding Path=ExpressionText.Length, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Value="0">
                        <Setter  x:Uid="Setter_102" Property="Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Setter  x:Uid="Setter_103" Property="Text" Value="{Binding Path=ExpressionType, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}, Converter={StaticResource typeToPromptTextConverter}}"/>
                    </DataTrigger>

                </Style.Triggers>
            </Style>

            <Style x:Uid="Style_4" x:Key="errorStyle" TargetType="{x:Type Rectangle}">
                <Setter x:Uid="Setter_47" Property="Visibility" Value="Collapsed"/>
                <Setter x:Uid="Setter_48" Property="Fill" Value="{x:Null}"/>
                <Setter x:Uid="Setter_49" Property="HorizontalAlignment" Value="Right"/>
                <Setter x:Uid="Setter_86" Property="VerticalAlignment" Value="Top"/>
                <Setter x:Uid="Setter_87" Property="ToolTipService.ShowOnDisabled" Value="True"/>
                <Style.Triggers>
                    <DataTrigger x:Uid="DataTrigger_9" Value="True">
                        <DataTrigger.Binding>
                            <MultiBinding x:Uid="MultiBinding_3" Converter="{StaticResource errorConverter}">
                                <Binding x:Uid="Binding_9" Mode="OneTime"/>
                                <Binding x:Uid="Binding_19" Path="Expression.ValidationState"/>
                                <Binding x:Uid="Binding_10" Path="ValidationState"/>
                                <Binding x:Uid="Binding_11" Path="EditingState"/>
                                <Binding x:Uid="Binding_12" Path="HasValidationError" />
                            </MultiBinding>
                        </DataTrigger.Binding>
                        <Setter x:Uid="Setter_50" Property="Visibility" Value="Visible"/>
                        <Setter x:Uid="Setter_51" Property="ToolTip" >
                            <Setter.Value>
                                <MultiBinding x:Uid="MultiBinding_4" Converter="{StaticResource errorMessageConverter}">
                                    <Binding x:Uid="Binding_13" Mode="OneTime"/>
                                    <Binding x:Uid="Binding_14" Path="Expression.ValidationMessage"/>
                                    <Binding x:Uid="Binding_15" Path="ValidationErrorMessage" />
                                    <Binding x:Uid="Binding_20" Path="Expression.ValidationState"/>
                                    <Binding x:Uid="Binding_16" Path="ValidationState"/>
                                    <Binding x:Uid="Binding_17" Path="EditingState"/>
                                    <Binding x:Uid="Binding_18" Path="HasValidationError" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter x:Uid="Setter_52" Property="Fill" Value="{x:Static swd:WorkflowDesignerIcons+DesignerItems.TextBoxErrorValidation}"/>
                        <Setter x:Uid="Setter_53" Property="Width" Value="12"/>
                        <Setter x:Uid="Setter_54" Property="Height" Value="12"/>
                        <Setter x:Uid="Setter_55" Property="Margin" Value="2,2,2,0"/>
                        <Setter x:Uid="Setter_88" Property="ToolTipService.InitialShowDelay" Value="100"/>
                        <Setter x:Uid="Setter_89" Property="ToolTipService.ShowDuration" Value="3600000"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Uid="Style_5" x:Key="editorStyle" TargetType="{x:Type Control}">
                <Setter x:Uid="Setter_90" Property="Margin" Value="4,2,4,2"/>
                <Setter x:Uid="Setter_56" Property="ContextMenu" Value="{Binding Path=ContextMenu}"/>
                <Setter x:Uid="Setter_57" Property="FlowDirection" Value="LeftToRight"/>
                <Setter x:Uid="Setter_58" Property="FontFamily" Value="{Binding Path=FontFamily}"/>
                <Setter x:Uid="Setter_59" Property="FontSize" Value="{Binding Path=FontSize}"/>
                <Setter x:Uid="Setter_60" Property="FontStretch" Value="{Binding Path=FontStretch}"/>
                <Setter x:Uid="Setter_61" Property="FontStyle" Value="{Binding Path=FontStyle}"/>
                <Setter x:Uid="Setter_62" Property="FontWeight" Value="{Binding Path=FontWeight}"/>
                <Setter x:Uid="Setter_64" Property="Language" Value="{Binding Path=Language}"/>
                <Setter x:Uid="Setter_65" Property="SnapsToDevicePixels" Value="{Binding Path=SnapsToDevicePixels}"/>
                <Setter x:Uid="Setter_92" Property="Height" Value="{Binding Path=Height}"/>
                <Setter x:Uid="Setter_94" Property="MinHeight" Value="{Binding Path=MinHeight}" />
                <Setter x:Uid="Setter_95" Property="MaxHeight" Value="{Binding Path=MaxHeight}" />
                <Setter x:Uid="Setter_98" Property="VerticalAlignment" Value="{Binding Path=VerticalContentAlignment}" />
                <Setter x:Uid="Setter_99" Property="ClipToBounds" Value="{Binding Path=ClipToBounds, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" />
            </Style>

            <Style x:Uid="Style_6" x:Key="borderStyle" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger x:Uid="DataTrigger_12" Binding="{Binding Path=IsEnabled}" Value="False">
                        <Setter x:Uid="Setter_106" Property="Background" Value="{DynamicResource WorkflowViewElementBackground}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Uid="DataTemplate_1" x:Key="textblock">

                <Grid x:Uid="Grid_1" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}, AncestorLevel=2}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Uid="ColumnDefinition_1" Width="*"/>
                        <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Uid="Border_2" Style="{StaticResource borderStyle}" Grid.Column="0"
                  Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"
                  BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"
                  BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"
                  CornerRadius="1" HorizontalAlignment="Stretch">
                        <TextBlock x:Uid="TextBlock_2" Style="{StaticResource blockStyle}" AutomationProperties.AutomationId="{Binding Path=Name}" 
                       Focusable="True" GotKeyboardFocus="OnGotTextBlockFocus" 
                       MouseLeftButtonDown="OnTextBlockMouseLeftButtonDown" Name="expresionTextBlock"/>
                    </Border>
                    <Rectangle x:Uid="Rectangle_2"  Style="{StaticResource errorStyle}" Grid.Column="1"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Uid="DataTemplate_2" x:Key="textbox">
                <Grid x:Uid="Grid_2" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" HorizontalAlignment="{Binding Path=HorizontalAlignment}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}, AncestorLevel=2}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Uid="ColumnDefinition_3" Width="*"/>
                        <ColumnDefinition x:Uid="ColumnDefinition_4" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Uid="TextBox_1" Grid.Column="0"  Background="{DynamicResource DesignerViewBackground}"  Style="{StaticResource boxStyle}" Loaded="OnTextBoxLoaded" GotKeyboardFocus="OnGotEditingFocus" />
                    <Rectangle x:Uid="Rectangle_4"  Style="{StaticResource errorStyle}" Grid.Column="1"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Uid="DataTemplate_3" x:Key="editor">
                <Grid x:Uid="Grid_3" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}" HorizontalAlignment="{Binding Path=HorizontalAlignment}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Control}, AncestorLevel=2}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Uid="ColumnDefinition_5" Width="*"/>
                        <ColumnDefinition x:Uid="ColumnDefinition_6" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Uid="Border_5" Grid.Column="0" CornerRadius="1"
                 BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"
                 BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type swdv:VisualBasicEditor}}}"
                 Loaded="OnEditorLoaded" Unloaded="OnEditorUnloaded" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                 GotKeyboardFocus="OnGotEditingFocus"  Background="{DynamicResource DesignerViewBackground}" />
                    <Rectangle x:Uid="Rectangle_6" Grid.Column="1" Style="{StaticResource errorStyle}"/>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </sape:TextualExpressionEditor.Resources>
    <sape:TextualExpressionEditor.CommandBindings>
        <CommandBinding x:Uid="CommandBinding_2" Command="{x:Static ApplicationCommands.Undo}" CanExecute="OnUndoCommandCanExecute" Executed="OnUndoCommandExecute"/>
        <CommandBinding x:Uid="CommandBinding_3" Command="{x:Static ApplicationCommands.Redo}" CanExecute="OnRedoCommandCanExecute" Executed="OnRedoCommandExecute"/>
        <CommandBinding x:Uid="CommandBinding_4" Command="{x:Static ApplicationCommands.Cut}" CanExecute="OnCutCommandCanExecute" Executed="OnCutCommandExecute"/>
        <CommandBinding x:Uid="CommandBinding_5" Command="{x:Static ApplicationCommands.Copy}" CanExecute="OnCopyCommandCanExecute" Executed="OnCopyCommandExecute"/>        
        <CommandBinding x:Uid="CommandBinding_6" Command="{x:Static ApplicationCommands.Paste}" CanExecute="OnPasteCommandCanExecute" Executed="OnPasteCommandExecute"/>
        <CommandBinding x:Uid="CommandBinding_11" Command="{x:Static ApplicationCommands.Help}" Executed="OnHelpExecute" />
        <CommandBinding x:Uid="CommandBinding_12" Command="{x:Static swdv:DesignerView.CopyCommand}" CanExecute="OnCopyCommandCanExecute" Executed="OnCopyCommandExecute"/>
    </sape:TextualExpressionEditor.CommandBindings>

</sape:TextualExpressionEditor>
