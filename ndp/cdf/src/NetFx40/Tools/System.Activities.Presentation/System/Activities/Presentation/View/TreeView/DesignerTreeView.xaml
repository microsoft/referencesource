<TreeView 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="System.Activities.Presentation.View.TreeView.DesignerTreeView"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sapm="clr-namespace:System.Activities.Presentation.Model;assembly=System.Activities.Presentation"
    xmlns:swd="clr-namespace:System.Activities.Presentation"
          xmlns:sapv="clr-namespace:System.Activities.Presentation.View" 
          xmlns:sapvt="clr-namespace:System.Activities.Presentation.View.TreeView"
          xmlns:sapc="clr-namespace:System.Activities.Presentation.Converters" mc:Ignorable="d"
             
             x:Uid="DesignerTreeView" VirtualizingStackPanel.IsVirtualizing="True" ItemsSource="{Binding Path=ItemsSource}" Height="Auto" Background="{DynamicResource OutlineViewBackgroundBrush}" BorderThickness="0" >
    <TreeView.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_5">
            <ResourceDictionary.MergedDictionaries>
                <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_3" Source="/System.Activities.Presentation;component/Themes/Icons.xaml"/>
                <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_4" Source="/System.Activities.Presentation;component/System/Activities/Presentation/ColorResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <sapc:OutlineViewTextConverter x:Uid="sapc:OutlineViewTextConverter_1" x:Key="outlineViewTextConverter"/>

            <Style x:Uid="Style_2" x:Key="IconViewboxStyle" TargetType="Viewbox">
                <Setter x:Uid="Setter_125" Property="Width" Value="16"/>
                <Setter x:Uid="Setter_126" Property="Height" Value="16"/>
                <Setter x:Uid="Setter_127" Property="IsHitTestVisible" Value="False"/>
                <Setter x:Uid="Setter_128" Property="HorizontalAlignment" Value="Left"/>
                <Setter x:Uid="Setter_129" Property="Margin" Value="3,0,3,0"/>
                <Style.Triggers>
                    <DataTrigger x:Uid="DataTrigger_44" Binding="{Binding Path=Icon}" Value="{x:Null}">
                        <Setter x:Uid="Setter_130" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Uid="Style_3" x:Key="TreeViewItemFocusVisual">
                <Setter x:Uid="Setter_131" Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_1">
                            <Rectangle x:Uid="Rectangle_3"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <PathGeometry x:Uid="PathGeometry_1" x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
            <Style x:Uid="Style_4" x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter x:Uid="Setter_132" Property="Focusable" Value="False"/>
                <Setter x:Uid="Setter_133" Property="Width" Value="16"/>
                <Setter x:Uid="Setter_134" Property="Height" Value="16"/>
                <Setter x:Uid="Setter_135" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type ToggleButton}">
                            <Border x:Uid="Border_1" Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                <Path x:Uid="ExpandPath" x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="{DynamicResource OutlineViewCollapsedArrowBorderBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Uid="RotateTransform_1" Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_1" Property="IsMouseOver" Value="True">
                                    <Setter x:Uid="Setter_136" Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource OutlineViewCollapsedArrowHoverBorderBrush}"/>
                                    <Setter x:Uid="Setter_137" Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_2" Property="IsChecked" Value="True">
                                    <Setter x:Uid="Setter_138" Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform x:Uid="RotateTransform_2" Angle="180" CenterY="3" CenterX="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter x:Uid="Setter_139" Property="Fill" TargetName="ExpandPath" Value="{DynamicResource OutlineViewExpandedArrowBrush}"/>
                                    <Setter x:Uid="Setter_140" Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource OutlineViewExpandedArrowBorderBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <HierarchicalDataTemplate x:Uid="HierarchicalDataTemplate_2"  DataType="{x:Type sapvt:TreeViewItemModelPropertyViewModel}" ItemsSource="{Binding Path=Children}">
              <StackPanel x:Uid="StackPanel_1" Orientation="Horizontal">
                    <TextBlock x:Uid="TextBlock_4" Text="{Binding Path=NodePrefixText}" />
                    <TextBlock x:Uid="TextBlock_2" Width="150" Text="{Binding Path=VisualValue.Name}" TextTrimming="CharacterEllipsis" 
                               ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}"/>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate x:Uid="HierarchicalDataTemplate_1" DataType="{x:Type sapvt:TreeViewItemModelItemViewModel}" ItemsSource="{Binding Path=Children}">
                <StackPanel x:Uid="StackPanel_2" Orientation="Horizontal">
                    <Viewbox x:Uid="iconBox_2" Margin="3,0,3,0" Style="{StaticResource IconViewboxStyle}">
                        <Rectangle x:Uid="Rectangle_2" Width="16" Height="16" Fill="{Binding Path=Icon}" />
                    </Viewbox>
                    <TextBlock x:Uid="TextBlock_5" Text="{Binding Path=NodePrefixText}" />
                    <TextBlock x:Uid="TextBlock_1" Width="150" TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}">
                  <TextBlock.Text>
                    <MultiBinding x:Uid="MultiBinding_2" Converter="{StaticResource outlineViewTextConverter}">
                      <Binding x:Uid="Binding_3" Path="VisualValue.DisplayName"/>
                      <Binding x:Uid="Binding_5" Path="VisualValue"/>
                    </MultiBinding>
                  </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate x:Uid="HierarchicalDataTemplate_3"  DataType="{x:Type sapvt:TreeViewItemKeyValuePairModelItemViewModel}" ItemsSource="{Binding Path=Children}">
                <StackPanel x:Uid="StackPanel_3" Orientation="Horizontal">
                    <TextBlock x:Uid="TextBlock_6" Text="{Binding Path=NodePrefixText}" />
                    <TextBlock x:Uid="TextBlock_3" Width="150" Text="{Binding Path=Value.Key}" TextTrimming="CharacterEllipsis" 
                               ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text}"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <Style x:Uid="Style_1" TargetType="{x:Type sapvt:DesignerTreeViewItem}">
                <Setter x:Uid="Setter_141" Property="Background" Value="Transparent"/>
                <Setter x:Uid="Setter_142" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter x:Uid="Setter_143" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter x:Uid="Setter_144" Property="Padding" Value="1,0,0,0"/>
                <Setter x:Uid="Setter_145" Property="Foreground" Value="{DynamicResource OutlineViewItemTextBrush}"/>
                <Setter x:Uid="Setter_146" Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter x:Uid="Setter_147" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type TreeViewItem}">
                            <Grid x:Uid="Grid_1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_1" MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_2" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_3" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
                                    <RowDefinition x:Uid="RowDefinition_2"/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Uid="Expander" x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <Border x:Uid="Bd" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Uid="PART_Header" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Uid="ItemsHost" x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger x:Uid="Trigger_3" Property="IsExpanded" Value="false">
                                    <Setter x:Uid="Setter_148" Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger x:Uid="Trigger_4" Property="HasItems" Value="false">
                                    <Setter x:Uid="Setter_149" Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <!--<Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>-->
                                <Trigger x:Uid="Trigger_5" Property="IsEnabled" Value="false">
                                    <Setter x:Uid="Setter_150" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter x:Uid="Setter_2" Property="IsExpanded" Value="{Binding Mode=TwoWay, Path=IsExpanded}"/>
                <Style.Triggers>
                    <Trigger x:Uid="Trigger_6" Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                        <Setter x:Uid="Setter_151" Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate x:Uid="ItemsPanelTemplate_1">
                                    <VirtualizingStackPanel x:Uid="VirtualizingStackPanel_1"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <DataTrigger x:Uid="DataTrigger_43" Binding="{Binding Path=IsHighlighted}" Value="True">
                        <Setter x:Uid="Setter_123" Property="BorderBrush" Value="{DynamicResource WorkflowViewElementSelectedBorder}" />
                        <Setter x:Uid="Setter_124" Property="Background" Value="{DynamicResource OutlineViewItemHighlightBrush}" />
                        <Setter x:Uid="Setter_152" Property="Foreground" Value="{DynamicResource OutlineViewItemSelectedTextBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </TreeView.Resources>
</TreeView>
    
