<ContentControl x:Uid="VariableDesigner" x:Class="System.Activities.Presentation.View.VariableDesigner"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sw="clr-namespace:System.Activities;assembly=System.Activities"
    xmlns:swd="clr-namespace:System.Activities.Presentation"
    xmlns:swdc="clr-namespace:System.Activities.Presentation.Converters"
    xmlns:swdm="clr-namespace:System.Activities.Presentation.Model"
    xmlns:proj="clr-namespace:System.Activities.Presentation.View"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:PropertyEditing="clr-namespace:System.Activities.Presentation.PropertyEditing"
    AutomationProperties.AutomationId="VariableDesigner"
    IsVisibleChanged="OnVisibleChanged"
    x:Name="variableDesigner">
  <ContentControl.Resources>
    <ResourceDictionary x:Uid="ResourceDictionary_1">

      <ResourceDictionary.MergedDictionaries>
        <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_4" Source="/System.Activities.Presentation;component/Themes/Icons.xaml"/>
        <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_2" Source="pack://application:,,,/System.Activities.Presentation;component/Themes/StringResources.xaml"/>
        <swd:CachedResourceDictionaryExtension x:Uid="ResourceDictionary_3" Source="pack://application:,,,/System.Activities.Presentation;component/Themes/Generic.xaml"/>
      </ResourceDictionary.MergedDictionaries>

      <proj:ContextMenuIconProvider x:Uid="proj:ContextMenuIconProvider_1" x:Key="contextMenuIconProvider"/>

      <swdc:ModelItemToAnnotationEnabledConverter x:Uid="ModelItemToAnnotationEnabledConverter_1" x:Key="modelItemToAnnotationEnabledConverter" />
      <swd:TypeNameConverter x:Uid="TypeNameConverter_1" x:Key="typeNameConverter" />
      <swdc:ModelToObjectValueConverter x:Uid="swdm:ModelToObjectValueConverter_1" x:Key="ModelToObjectConverter" />
      <swd:VariableExpressionConverter x:Uid="swdm:VariableExpressionConverter_1" x:Key="VariableExpressionConverter" />
      <swd:GenericTypeParameterConverter x:Uid="swd:GenericTypeParameterConverter_1" x:Key="TypeParameterConverter"/>
      <proj:BreadCrumbTextConverter x:Uid="proj:ScopeToNameConverter_1" x:Key="scopeToNameConverter"/>
      <swd:NullToBooleanConverter x:Uid="swd:NullToBooleanConverter" x:Key="nullToBooleanConverter"/>
      <swd:NotConverter x:Uid="swd:NotConverter" x:Key="NotConverter"/>
      <proj:ScopeToTooltipConverter x:Uid="proj:ScopeToTooltipConverter_1" x:Key="scopeToTooltipConverter"/>

      <!--Default Row Style-->
      <Style x:Uid="Style_1" x:Key="defaultRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource baseDataRowStyle}">
        <Setter x:Uid="Setter_10" Property="AutomationProperties.AutomationId" Value="{Binding Path=Item.Content.AutomationId, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay }" />
        <Style.Triggers>
          <DataTrigger x:Uid="DataTrigger_3" Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
            <Setter x:Uid="Setter_33" Property="AutomationProperties.Name" Value="{StaticResource addVariableNewRowLabel}" />
          </DataTrigger>
        </Style.Triggers>
      </Style>

      <!--Custom style for TypePresenter-->
      <Style x:Uid="Style_4" TargetType="{x:Type proj:TypePresenter}" x:Key="typePresenterStyle">
        <Setter x:Uid="Setter_4" Property="Type" Value="{Binding Path=Content.Type, Mode=TwoWay, ValidatesOnExceptions=True, Converter={StaticResource ModelToObjectConverter}}"/>
        <Setter x:Uid="Setter_5" Property="Context" Value="{Binding Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type proj:VariableDesigner}}, Path=Context}"/>
        <Setter x:Uid="Setter_7" Property="ToolTip" Value="{Binding Path=Content.Type.FullName}"/>
        <Setter x:Uid="Setter_8" Property="BrowseTypeDirectly" Value="False"/>
      </Style>

      <Style x:Uid="Style_5" TargetType="{x:Type ComboBoxItem}" x:Key="comboBoxItemStyle">
        <Setter x:Uid="Setter_9" Property="AutomationProperties.AutomationId">
          <Setter.Value>
            <MultiBinding x:Uid="Multibinding_1" Converter="{StaticResource scopeToNameConverter}">
              <Binding x:Uid="Binding_1" Path="Scope"/>
              <Binding x:Uid="Binding_2" Path="Scope.DisplayName"/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_27" Property="ToolTip" Value="{Binding Converter={StaticResource scopeToTooltipConverter}}"/>
        <Setter x:Uid="Setter_28" Property="AutomationProperties.Name">
          <Setter.Value>
            <MultiBinding x:Uid="MultiBinding_1" Converter="{StaticResource scopeToNameConverter}">
              <Binding x:Uid="Binding_7"/>
              <Binding x:Uid="Binding_8" Path="DisplayName"/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </Style>

      <!-- Custom style for combobox containing scope information -->
      <Style x:Uid="Style_6" TargetType="{x:Type ComboBox}" x:Key="ScopeComboStyle">
        <Setter x:Uid="Setter_14" Property="IsEditable" Value="False"/>
        <Setter x:Uid="Setter_15" Property="AutomationProperties.AutomationId" Value="ScopeComboBox"/>
        <Setter x:Uid="Setter_16" Property="VerticalAlignment" Value="Center"/>
        <Setter x:Uid="Setter_17" Property="ItemContainerStyle" Value="{StaticResource comboBoxItemStyle}"/>
        <Setter x:Uid="Setter_18" Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate x:Uid="DataTemplate_1">
              <TextBlock x:Uid="TextBlock_5">
                      <TextBlock.Text>
                          <MultiBinding x:Uid="Multibinding_2" Converter="{StaticResource scopeToNameConverter}">
                            <Binding x:Uid="Binding_3" />
                            <Binding x:Uid="Binding_4" Path="DisplayName"/>
                            <Binding x:Uid="Binding_9" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}" Mode="OneWay"/>
                          </MultiBinding>
                      </TextBlock.Text>
              </TextBlock>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="{x:Type proj:ExpressionTextBox}" x:Key="variableValueETBStyle" x:Uid="ETBStyle">
        <Setter x:Uid="Setter_19" Property="Expression" Value="{Binding Path=Content.Default, Mode=TwoWay, Converter={StaticResource VariableExpressionConverter}}"/>
        <Setter x:Uid="Setter_20" Property="ExpressionType" Value="{Binding Path=Content.Type, Mode=OneWay, Converter={StaticResource ModelToObjectConverter}}"/>
        <Setter x:Uid="Setter_21" Property="OwnerActivity" Value="{Binding Path=Content.Scope, Mode=OneWay, Converter={StaticResource ModelToObjectConverter}}"/>
        <Setter x:Uid="Setter_22" Property="MinWidth" Value="40"/>
        <Setter x:Uid="Setter_23" Property="MaxLines" Value="1"/>
        <Setter x:Uid="Setter_24" Property="BorderBrush" Value="{x:Null}"/>
        <Setter x:Uid="Setter_25" Property="BorderThickness" Value="0,0,0,0"/>
        <Setter x:Uid="Setter_26" Property="AutomationProperties.AutomationId" Value="VariableValueExpressionTextBox"/>
        <Setter x:Uid="Setter_31" Property="AcceptsReturn" Value="False"/>
        <Setter x:Uid="Setter_32" Property="AcceptsTab" Value="False"/>
      </Style>


      <!-- data template for each cell in data grid-->
      <DataTemplate x:Uid="VariableNameEditableTemplate" x:Key="variableNameEditableTemplate">
        <proj:NoContextMenuGrid x:Uid="proj:NoContextMenuGrid_1">
          <proj:VBIdentifierDesigner x:Uid="VBIdentifierDesigner_1" Identifier="{Binding Path=Content.Name, Mode=TwoWay, Converter={StaticResource ModelToObjectConverter}}" IsReadOnly="False" MinWidth="75" VerticalAlignment="Center" HorizontalAlignment="Stretch" AutomationProperties.AutomationId="VariableNameTextBox"
            AutomationProperties.Name="{StaticResource variableNameHeader}" Loaded="OnEditingControlLoaded" Unloaded="OnEditingControlUnloaded" />
        </proj:NoContextMenuGrid>
      </DataTemplate>

      <DataTemplate x:Uid="VariableNameReadonlyTemplate" x:Key="variableNameReadonlyTemplate">
        <Grid x:Uid="Grid_2">
          <Grid.ColumnDefinitions>
            <ColumnDefinition x:Uid="ColumnDefinition_1" />
            <ColumnDefinition x:Uid="ColumnDefinition_2" Width="16" />
          </Grid.ColumnDefinitions>
          <proj:VBIdentifierDesigner x:Uid="VBIdentifierDesigner_2" Grid.Column="0" Identifier="{Binding Path=Content.Name, Converter={StaticResource ModelToObjectConverter}}"  IsReadOnly="True" VerticalAlignment="Center" AutomationProperties.AutomationId="VariableNameTextBlock"/>
          <Button x:Uid="Button_1" Grid.Column="1" ToolTip="{Binding Path=Content.DesignTimeVariableAnnotationText}" Height="16" Width="16" HorizontalAlignment="Right">
            <Button.Style>
              <Style x:Uid="Style_35">
                <Style.Triggers>
                  <DataTrigger x:Uid="DataTrigger_240" Binding="{Binding Path=Content.DesignTimeVariableAnnotationText}" Value="{x:Null}">
                    <Setter x:Uid="Setter_1202" Property="Button.Visibility" Value="Collapsed" />
                  </DataTrigger>
                  <DataTrigger x:Uid="DataTrigger_241" Binding="{Binding Path=Content, Converter={StaticResource modelItemToAnnotationEnabledConverter}}"  Value="False">
                    <Setter x:Uid="Setter_1203" Property="Button.Visibility" Value="Collapsed" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
            <Button.Template>
              <ControlTemplate x:Uid="ControlTemplate_6">
                <Rectangle x:Uid="Rectangle_28" Fill="{x:Static swd:WorkflowDesignerIcons+DesignerItems.Annotation}" />
              </ControlTemplate>
            </Button.Template>
          </Button>
        </Grid>
      </DataTemplate>

      <DataTemplate x:Uid="VariableTypeEditableTemplate" x:Key="variableTypeEditableTemplate">
        <proj:NoContextMenuGrid x:Uid="proj:NoContextMenuGrid_2">
          <proj:TypePresenter x:Uid="addVariableTypePresenter" x:Name="addVariableTypePresenter" VerticalAlignment="Center" Style="{StaticResource typePresenterStyle}" AutomationProperties.AutomationId="VariableTypeTypePresenter"
            Label="{StaticResource variableTypeHeader}" Loaded="OnEditingControlLoaded" Unloaded="OnEditingControlUnloaded" />
        </proj:NoContextMenuGrid>
      </DataTemplate>

      <DataTemplate x:Uid="VariableTypeReadonlyTemplate" x:Key="variableTypeReadonlyTemplate">
        <TextBlock x:Uid="TextBlock_3" Text="{Binding Path=Type, Converter={StaticResource TypeParameterConverter}}" ToolTip="{Binding Path=Type, Converter={StaticResource typeNameConverter}, ConverterParameter=True}" VerticalAlignment="Center" AutomationProperties.AutomationId="VariableTypeTextBlock"/>
      </DataTemplate>

      <DataTemplate x:Uid="VariableScopeEditableTemplate" x:Key="variableScopeEditableTemplate">
        <proj:NoContextMenuGrid x:Uid="proj:NoContextMenuGrid_3">
          <ComboBox x:Uid="ComboBox_1" SelectedItem="{Binding Path=Content.Scope, Mode=TwoWay, Converter={StaticResource ModelToObjectConverter}}"
            ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type proj:VariableDesigner}}, Path=ScopesList}"
            DisplayMemberPath="DisplayName"
            ToolTip="{Binding Path=ToolTip}" Style="{StaticResource ScopeComboStyle}"
            AutomationProperties.Name="{StaticResource variableScopeHeader}" Loaded="OnEditingControlLoaded" Unloaded="OnEditingControlUnloaded" />
        </proj:NoContextMenuGrid>
      </DataTemplate>

      <DataTemplate x:Uid="VariableScopeReadonlyTemplate" x:Key="variableScopeReadonlyTemplate">
        <TextBlock x:Uid="TextBlock_4" VerticalAlignment="Center" ToolTip="{Binding Path=ToolTip}" AutomationProperties.AutomationId="VariableScopeTextBlock">
                <TextBlock.Text>
                  <MultiBinding x:Uid="Multibinding_3" Converter="{StaticResource scopeToNameConverter}" Mode="TwoWay">
                    <Binding x:Uid="Binding_5" Path="Scope"/>
                    <Binding x:Uid="Binding_6" Path="Scope.DisplayName"/>
                    <Binding x:Uid="Binding_10" Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}" Mode="OneWay"/>
                  </MultiBinding>
                </TextBlock.Text>
        </TextBlock>
      </DataTemplate>

      <DataTemplate x:Uid="VariableValueEditableTemplate" x:Key="variableExpressionEditableTemplate">
        <proj:ExpressionTextBox x:Uid="defaultExpressionTextBox" x:Name="defaultExpressionTextBox" Style="{StaticResource variableValueETBStyle}"
                                         AutomationProperties.Name="{StaticResource variableValueHeader}" Loaded="OnEditingControlLoaded" Unloaded="OnEditingControlUnloaded" />
      </DataTemplate>

      <DataTemplate x:Uid="VariableValueReadonlyTemplate" x:Key="variableExpressionReadonlyTemplate">
        <proj:ExpressionTextBox x:Uid="proj:ExpressionTextBox_1" x:Name="defaultExpressionTextBox" Style="{StaticResource variableValueETBStyle}" IsReadOnly="True" Loaded="OnEditingControlLoaded" Unloaded="OnEditingControlUnloaded" />
      </DataTemplate>

    </ResourceDictionary>

  </ContentControl.Resources>

  <ContentControl.CommandBindings>
    <CommandBinding x:Uid="CommandBinding_1" Command="{x:Static ApplicationCommands.Delete}" CanExecute="OnDeleteCommandCanExecute" Executed="OnDeleteCommandExecuted" />
    <CommandBinding x:Uid="CommandBinding_2" Command="{x:Static proj:DesignerView.AddAnnotationCommand}" CanExecute="OnAddAnnotationCommandCanExecute" Executed="OnAddAnnotationCommandExecuted" />
    <CommandBinding x:Uid="CommandBinding_3" Command="{x:Static proj:DesignerView.EditAnnotationCommand}" CanExecute="OnEditAnnotationCommandCanExecute" Executed="OnEditAnnotationCommandExecuted" />
    <CommandBinding x:Uid="CommandBinding_4" Command="{x:Static proj:DesignerView.DeleteAnnotationCommand}" CanExecute="OnDeleteAnnotationCommandCanExecute" Executed="OnDeleteAnnotationCommandExecuted" />
  </ContentControl.CommandBindings>

  <ContentControl.ContextMenu>
    <ContextMenu x:Uid="ContextMenu_1">
            <MenuItem x:Uid="MenuItem_1" Command="{x:Static ApplicationCommands.Delete}" Header="{StaticResource menuItemDelete}" AutomationProperties.AutomationId="DeleteMenuItem" Style="{StaticResource menuItemStyle}" >
        <MenuItem.Icon>
          <MultiBinding x:Uid="MultiBinding_2" Converter="{StaticResource contextMenuIconProvider}" ConverterParameter="Delete">
            <Binding x:Uid="Binding_11" RelativeSource="{RelativeSource Self}" Mode="OneTime"/>
            <Binding x:Uid="Binding_12" RelativeSource="{RelativeSource Self}" Mode="OneWay" Path="IsEnabled"/>
          </MultiBinding>
        </MenuItem.Icon>
      </MenuItem>
      <Separator x:Uid="Separator_1" Loaded="OnAnnotationSeparatorLoaded" Style="{StaticResource separatorStyle}" />
      <MenuItem x:Uid="MenuItem_2" Command="{x:Static proj:DesignerView.AddAnnotationCommand}" Loaded="OnAddAnnotationMenuLoaded" Header="_Add Annotation" Style="{StaticResource menuItemStyle}" AutomationProperties.AutomationId="AddAnnotationMenuItem" />
      <MenuItem x:Uid="MenuItem_3" Command="{x:Static proj:DesignerView.EditAnnotationCommand}" Loaded="OnEditAnnotationMenuLoaded" Header="_Edit Annotation" Style="{StaticResource menuItemStyle}" AutomationProperties.AutomationId="EditAnnotationMenuItem" />
      <MenuItem x:Uid="MenuItem_4" Command="{x:Static proj:DesignerView.DeleteAnnotationCommand}" Loaded="OnDeleteAnnotationMenuLoaded" Header="De_lete Annotation" Style="{StaticResource menuItemStyle}" AutomationProperties.AutomationId="DeleteAnnotationMenuItem" />
    </ContextMenu>
  </ContentControl.ContextMenu>

  <Grid x:Uid="Grid_1">
    <Grid.RowDefinitions>
      <RowDefinition x:Uid="RowDefinition_1" Height="Auto" MinHeight="20"/>
      <RowDefinition x:Uid="RowDefinition_2" Height="*"/>
    </Grid.RowDefinitions>

    <DataGrid x:Uid="variableDataGrid" x:Name="variableDataGrid" Grid.Row="0" Grid.RowSpan="2"
                 CanUserAddRows="{Binding Mode=OneWay, ElementName=variableDesigner, Path=CurrentVariableScope, Converter={StaticResource nullToBooleanConverter}}"
                 RowStyle="{StaticResource defaultRowStyle}"
                 DataGridCell.GotFocus="OnDataGridCellGotFocus"
                 CellStyle="{StaticResource baseDataCellStyle}"
                 IsReadOnly="{Binding Mode=OneWay, Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type proj:DesignerView}}}"
                 AutomationProperties.AutomationId="VariableDataGrid">

      <DataGrid.Columns>
        <DataGridTemplateColumn
          x:Uid="DataGridTemplateColumn_1" CanUserSort="True"
          Header="{StaticResource variableNameHeader}" MinWidth="100" Width="3*"  SortMemberPath="Content.Name.IdentifierName"
          CellEditingTemplate="{StaticResource variableNameEditableTemplate}"
          CellTemplate="{StaticResource variableNameReadonlyTemplate}"/>

        <DataGridTemplateColumn
          x:Uid="DataGridTemplateColumn_2" CanUserSort="True"
          Header="{StaticResource variableTypeHeader}" MinWidth="100" Width="*" SortMemberPath="Content.Type.Name"
          CellEditingTemplate="{StaticResource variableTypeEditableTemplate}"
          CellTemplate="{StaticResource variableTypeReadonlyTemplate}"/>

        <DataGridTemplateColumn
          x:Uid="DataGridTemplateColumn_3" CanUserSort="True"
          Header="{StaticResource variableScopeHeader}" MinWidth="75" Width="*" SortMemberPath="Content.ScopeLevel"
          CellEditingTemplate="{StaticResource variableScopeEditableTemplate}"
          CellTemplate="{StaticResource variableScopeReadonlyTemplate}"/>

        <DataGridTemplateColumn
          x:Uid="DataGridTemplateColumn_4"
          Header="{StaticResource variableValueHeader}" MinWidth="100" Width="2*"
          CellEditingTemplate="{x:Static proj:DataGridHelper.DynamicCellContentTemplate}"
          CellTemplate="{x:Static proj:DataGridHelper.DynamicCellContentTemplate}"/>

      </DataGrid.Columns>
    </DataGrid>

    <TextBlock x:Uid="TextBlock_6" Text="{StaticResource selectScopeHint}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Foreground="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}">
      <TextBlock.Style>
        <Style x:Uid="Style_7" TargetType="{x:Type TextBlock}">
          <Style.Triggers>
            <DataTrigger x:Uid="DataTrigger_1" Binding="{Binding Path=CanUserAddRows, ElementName=variableDataGrid}" Value="True">
              <Setter x:Uid="Setter_29" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type proj:DesignerView}}, Mode=OneWay}" Value="True">
              <Setter x:Uid="Setter_30" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBlock.Style>
    </TextBlock>
  </Grid>

</ContentControl>
