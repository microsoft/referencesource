<ResourceDictionary   x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:sad="clr-namespace:System.Activities.Presentation"
    xmlns:swdv="clr-namespace:System.Activities.Presentation.View">

    <ResourceDictionary.MergedDictionaries>      
      <sad:CachedResourceDictionaryExtension x:Uid="sad:CachedResourceDictionaryExtension_1" Source="pack://application:,,,/System.Activities.Presentation;component/System/Activities/Presentation/ColorResources.xaml"/>
      <sad:CachedResourceDictionaryExtension x:Uid="sad:CachedResourceDictionaryExtension_2" Source="pack://application:,,,/System.Activities.Presentation;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
  
    <Style x:Uid="Style_1" x:Key="dropDownMenuItem" TargetType="{x:Type MenuItem}">
        <Setter x:Uid="Setter_1" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1">
                    <StackPanel x:Uid="StackPanel_1">
                        <ToggleButton x:Uid="bd" Name="bd">
                            <Rectangle x:Uid="RECT_Icon" Fill="{Binding Path=DropDownMenuIcon, RelativeSource={RelativeSource AncestorType={x:Type swdv:ExtensionWindowHeader}}}" Width="16" Height="16" Name="RECT_Icon"/>
                            <ToggleButton.Style>
                                <Style x:Uid="Style_2">
                                    <Setter x:Uid="Setter_2" Property="ToggleButton.IsChecked" Value="{Binding Path=IsOpen, ElementName=PART_Popup}"/>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Uid="ContentPresenter_1"/>
                        <Popup x:Uid="PART_Popup" Focusable="false" AllowsTransparency="true" HorizontalOffset="1" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-1" x:Name="PART_Popup">
                            <ContentControl x:Uid="SubMenuBorder" x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ScrollViewer x:Uid="ScrollViewer_1" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                                    <ItemsPresenter x:Uid="ItemsPresenter_1"/>
                                </ScrollViewer>
                            </ContentControl>
                        </Popup>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1" Property="Popup.IsOpen" Value="True" SourceName="PART_Popup">
                            <Setter x:Uid="Setter_3" Property="LayoutTransform" TargetName="RECT_Icon">
                                <Setter.Value>
                                    <RotateTransform x:Uid="RotateTransform_1" Angle="90" CenterX="0.5" CenterY="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
   
    <ControlTemplate x:Uid="ControlTemplate_2" x:Key="ExtensionWindowHeaderDefaultTemplate" TargetType="swdv:ExtensionWindowHeader">
        <Grid x:Uid="PART_Header" Name="PART_Header" Background="{TemplateBinding Background}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_2" Width="*"/>
                <ColumnDefinition x:Uid="ColumnDefinition_3" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_4" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle x:Uid="iconBox" Grid.Column="0" Width="20" Height="20" Fill="{TemplateBinding Icon}" HorizontalAlignment="Left" Margin="3" Name="iconBox"/>

            <TextBlock x:Uid="TextBlock_1" Grid.Column="1" Text="{TemplateBinding Title}" Margin="3" FontSize="{TemplateBinding FontSize}"  VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}"/>
            
            <Menu x:Uid="Menu_1" Grid.Column="2" VerticalAlignment="Center" Background="{x:Null}" >
                <MenuItem x:Uid="MenuItem_1" Style="{StaticResource dropDownMenuItem}" ItemsSource="{Binding Path=MenuItems, RelativeSource={RelativeSource AncestorType={x:Type swdv:ExtensionWindow}}}"/>
                <Menu.Style>
                    <Style x:Uid="Style_3">
                        <Style.Triggers>
                            <DataTrigger x:Uid="DataTrigger_1" Binding="{Binding Path=MenuItems.Count, RelativeSource={RelativeSource AncestorType={x:Type swdv:ExtensionWindow}}}" Value="0">
                                <Setter x:Uid="Setter_4" Property="Menu.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Menu.Style>
            </Menu>
           
            <Button x:Uid="PART_CloseButton" Name="PART_CloseButton" Grid.Column="3" KeyboardNavigation.IsTabStop="False"
                    HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3" AutomationProperties.AutomationId="CloseButton">
              <Button.Style>
                <Style x:Uid="Style_4" TargetType="{x:Type Button}">
                  <Setter x:Uid="Setter_6" Property="Template">
                    <Setter.Value>
                      <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type Button}">
                        <Border x:Uid="Border_1" Width="12" Height="12">
                          <Rectangle x:Uid="Rectangle_1" Fill="{x:Static sad:WorkflowDesignerIcons+DesignerItems.OverviewWindowCloseButton}" Width="6" Height="6" />
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                  <Setter x:Uid="Setter_7" Property="FocusVisualStyle" Value="{x:Null}"/>
                  <Style.Triggers>
                    <Trigger x:Uid="Trigger_2" Property="IsMouseOver" Value="True">
                      <Setter x:Uid="Setter_8" Property="Template">
                        <Setter.Value>
                          <ControlTemplate x:Uid="ControlTemplate_4" TargetType="{x:Type Button}">
                            <Border x:Uid="Border_2" BorderThickness="1" BorderBrush="#FFE5C365" Background="#FFFFFCF4 " Width="12" Height="12">
                              <Rectangle x:Uid="Rectangle_2" Fill="{StaticResource ExtensionWindowHeaderCloseButtonMouseOver}" Width="6" Height="6" />
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                    <Trigger x:Uid="Trigger_3" Property="IsPressed" Value="True">
                      <Setter x:Uid="Setter_9" Property="Template">
                        <Setter.Value>
                          <ControlTemplate x:Uid="ControlTemplate_5" TargetType="{x:Type Button}">
                            <Border x:Uid="Border_3" BorderThickness="1" BorderBrush="#FFE5C365" Background="#FFFFE8A6" Width="12" Height="12">
                              <Rectangle x:Uid="Rectangle_3" Fill="{StaticResource ExtensionWindowHeaderCloseButtonMouseOver}" Width="6" Height="6" />
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Button.Style>
            </Button>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger x:Uid="DataTrigger_2" Binding="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                <Setter x:Uid="Setter_5" Property="Visibility" Value="Collapsed" TargetName="iconBox"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
